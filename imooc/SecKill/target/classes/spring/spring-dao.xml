<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--上面多头部在spring官方文档,容器相关章节找到-->
    <!--配置整合mybatise过程-->
    <!--1:配置数据库相关参数
        properties多属性:${url}
    -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--2:数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置链接池属性-->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${username}"/>
        <property name="password" value="${password}"/>

        <!--c3p0连接池私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!--关闭链接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--获取链接超时时间-->
        <property name="checkoutTimeout" value="1000"/>
        <!--当获取链接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>

    </bean>
    <!--3:配置SqlsessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置MyBatis全局配置文件:mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描entity包使用别名-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
       <!--
       当有多个包时,用;分割
       <property name="typeAliasesPackage" value="org.seckill.entity;org.seckill.entity2"/>-->
        <!---->
        <!--扫描sql配置文件:mapper需要多xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--4: 配置扫描Dao接口包,动态实现Dao接口,注入到spring容器中-->
    <!--自动运行,不需要配置id-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <!--当MapperScannerConfigure启动的时候,可能jdbc.properties文件还没有加载
            拿到的datasource是错误的,所以这里用sqlSessionFactoryBeanName,而不用sqlSessionFactory
            所以这里用sqlSessionFactoryBeanName在用mybatis的时候,才会去找sqlSessionFactory
            放在提前初始话sqlSessionFactory
        -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描dao接口包-->
        <!--自动实现包下类的实现,注入到spring容器中-->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>

    <!-- RedisDao-->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="localhost"/>
        <constructor-arg index="1" value="6379"/>
    </bean>
</beans>